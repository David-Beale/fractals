{"version":3,"sources":["main/hooks/useMouseInteraction.js","main/Main.js","main/hooks/useResize.js","main/hooks/useCounter.js","main/hooks/useFractal.js","main/hooks/useColor.js","main/shaders/vs.js","main/shaders/fs.js","buttons/ButtonsStyle.js","buttons/ShuffleButton/ShuffleButton.js","buttons/ColorButton/ColorButton.js","buttons/Buttons.js","Info/Info.js","App.js","index.js"],"names":["useMouseInteraction","center","scale","shader","buttonDown","useRef","prevMouse","mousePos","zooming","zoomDirection","prevScale","useFrame","current","direction","updateScale","px","window","innerWidth","py","innerHeight","scaleDiff","updateCenter","uniforms","value","dx","dy","translate","e","clientX","clientY","deltaY","Main","fractal","color","counter","useMemo","mouse","resolution","ratio","windowSize","useState","setWindowSize","useEffect","windowResize","addEventListener","removeEventListener","useResize","onPointerDown","onPointerUp","onPointerMove","onWheel","counterDir","useCounter","useFractal","useColor","args","ref","vertexShader","fragmentShader","Container","styled","div","StyledIconButton","IconButton","props","enabled","ShuffleButton","onClick","Tooltip","title","fontSize","ColorButton","Buttons","onRandomFractal","onRandomColor","InfoContainer","Row","IconContainer","Transition","forwardRef","Zoom","Info","open","setOpen","onClose","Dialog","TransitionComponent","App","setFractal","setColor","className","x","Math","random","y","r","g","b","colorVec","Vector3","setLength","toArray","orthographic","camera","position","near","far","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78ddd981.chunk.js","sourcesContent":["import { useFrame } from \"@react-three/fiber\";\r\nimport { useRef } from \"react\";\r\n\r\nconst zoomSpeed = 0.03;\r\n\r\nexport const useMouseInteraction = (center, scale, shader) => {\r\n  const buttonDown = useRef(false);\r\n  const prevMouse = useRef([]);\r\n  const mousePos = useRef([]);\r\n  const zooming = useRef(0);\r\n  const zoomDirection = useRef(0);\r\n  const prevScale = useRef(3);\r\n\r\n  const updateCenter = () => {\r\n    const px = mousePos.current[0] / window.innerWidth - 0.5;\r\n    const py = 0.5 - mousePos.current[1] / window.innerHeight;\r\n    const scaleDiff = prevScale.current - scale.current;\r\n    center.current[0] += px * scaleDiff;\r\n    center.current[1] += py * scaleDiff;\r\n  };\r\n  const updateScale = () => {\r\n    const direction = zoomDirection.current === 0 ? -1 : 1;\r\n    prevScale.current = scale.current;\r\n    scale.current += scale.current * zoomSpeed * direction;\r\n    if (scale.current < 0.00002) scale.current = 0.00002;\r\n    else if (scale.current > 3) scale.current = 3;\r\n  };\r\n  const translate = () => {\r\n    const dx = (prevMouse.current[0] - mousePos.current[0]) / window.innerWidth;\r\n    const dy =\r\n      (mousePos.current[1] - prevMouse.current[1]) / window.innerHeight;\r\n    center.current[0] += dx * scale.current;\r\n    center.current[1] += dy * scale.current;\r\n    prevMouse.current = mousePos.current;\r\n  };\r\n\r\n  const onPointerDown = (e) => {\r\n    buttonDown.current = true;\r\n    prevMouse.current = [e.clientX, e.clientY];\r\n    mousePos.current = [e.clientX, e.clientY];\r\n  };\r\n  const onPointerUp = () => {\r\n    buttonDown.current = false;\r\n  };\r\n  const onPointerMove = (e) => {\r\n    if (buttonDown.current === false) return;\r\n    mousePos.current = [e.clientX, e.clientY];\r\n  };\r\n  const onWheel = (e) => {\r\n    mousePos.current = [e.clientX, e.clientY];\r\n    zooming.current = 10;\r\n    if (e.deltaY < 0) {\r\n      zoomDirection.current = 0;\r\n    } else {\r\n      zoomDirection.current = 2;\r\n    }\r\n  };\r\n\r\n  useFrame(() => {\r\n    if (zooming.current) {\r\n      updateScale();\r\n      updateCenter();\r\n\r\n      shader.current.uniforms.scale.value = scale.current;\r\n      zooming.current--;\r\n    }\r\n    if (buttonDown.current) {\r\n      translate();\r\n    }\r\n  }, []);\r\n\r\n  return [onPointerDown, onPointerUp, onPointerMove, onWheel];\r\n};\r\n","import { useMemo, useRef } from \"react\";\r\nimport { _VS } from \"./shaders/vs\";\r\nimport { _FS } from \"./shaders/fs\";\r\nimport { useResize } from \"./hooks/useResize\";\r\nimport { useMouseInteraction } from \"./hooks/useMouseInteraction\";\r\nimport { useCounter } from \"./hooks/useCounter\";\r\nimport { useFractal } from \"./hooks/useFractal\";\r\nimport { useColor } from \"./hooks/useColor\";\r\n\r\nexport default function Main({ fractal, color }) {\r\n  const shader = useRef();\r\n  const counter = useRef(0);\r\n  const scale = useRef(3);\r\n  const center = useRef([-0.3, 0]);\r\n\r\n  const uniforms = useMemo(() => {\r\n    return {\r\n      mouse: { value: [0, 0] },\r\n      resolution: { value: [window.innerWidth, window.innerHeight] },\r\n      ratio: {\r\n        value: window.innerWidth / window.innerHeight,\r\n      },\r\n      center: {\r\n        value: center.current,\r\n      },\r\n      scale: {\r\n        value: scale.current,\r\n      },\r\n      counter: {\r\n        value: counter.current,\r\n      },\r\n      fractal: {\r\n        value: [2, 2],\r\n      },\r\n      color: {\r\n        value: [0, 0, 0],\r\n      },\r\n    };\r\n  }, []);\r\n\r\n  const windowSize = useResize(shader);\r\n  const [onPointerDown, onPointerUp, onPointerMove, onWheel] =\r\n    useMouseInteraction(center, scale, shader);\r\n\r\n  useCounter(counter, shader);\r\n  useFractal(fractal, shader, center, scale);\r\n  useColor(shader, color);\r\n\r\n  return (\r\n    <mesh\r\n      onPointerDown={onPointerDown}\r\n      onPointerUp={onPointerUp}\r\n      onPointerMove={onPointerMove}\r\n      onWheel={onWheel}\r\n    >\r\n      <planeBufferGeometry args={windowSize} />\r\n      <shaderMaterial\r\n        ref={shader}\r\n        uniforms={uniforms}\r\n        vertexShader={_VS}\r\n        fragmentShader={_FS}\r\n      ></shaderMaterial>\r\n    </mesh>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useResize = (shader) => {\r\n  const [windowSize, setWindowSize] = useState([\r\n    window.innerWidth,\r\n    window.innerHeight,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const windowResize = () => {\r\n      setWindowSize([window.innerWidth, window.innerHeight]);\r\n      shader.current.uniforms.ratio.value =\r\n        window.innerWidth / window.innerHeight;\r\n      shader.current.uniforms.resolution.value = [\r\n        window.innerWidth,\r\n        window.innerHeight,\r\n      ];\r\n    };\r\n    window.addEventListener(\"resize\", windowResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", windowResize);\r\n    };\r\n  }, [shader]);\r\n\r\n  return windowSize;\r\n};\r\n","import { useFrame } from \"@react-three/fiber\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const useCounter = (counter, shader) => {\r\n  const counterDir = useRef(1);\r\n  useFrame(() => {\r\n    if (counter.current > 6) {\r\n      counterDir.current = -1;\r\n    } else if (counter.current < -6) {\r\n      counterDir.current = 1;\r\n    }\r\n    counter.current += 0.01 * counterDir.current;\r\n    shader.current.uniforms.counter.value = counter.current;\r\n  }, []);\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useFractal = (fractal, shader, center, scale) => {\r\n  useEffect(() => {\r\n    if (fractal[0] < 2) {\r\n      shader.current.uniforms.fractal.value = fractal;\r\n      shader.current.uniforms.scale.value = 3;\r\n      center.current[0] = 0;\r\n      center.current[1] = 0;\r\n      scale.current = 3;\r\n    }\r\n  }, [center, fractal, scale, shader]);\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useColor = (shader, color) => {\r\n  useEffect(() => {\r\n    shader.current.uniforms.color.value = color;\r\n  }, [color, shader]);\r\n};\r\n","export const _VS = `\r\nvoid main() {\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`;\r\n","export const _FS = `\r\nprecision highp float;\r\n\r\nuniform vec2 resolution;\r\nuniform float ratio;\r\nuniform vec2 center;\r\nuniform float scale;\r\nuniform float counter;\r\nuniform vec2 fractal;\r\nuniform vec3 color;\r\n\r\n\r\nvoid main() {\r\n  float maxN = 250.0;\r\n  float a = ratio  * ((gl_FragCoord.x / resolution.x - 0.5) * scale + center.x);\r\n  float b = (gl_FragCoord.y / resolution.y - 0.5) * scale + center.y;\r\n\r\n  float ca = a;\r\n  float cb = b;\r\n  if(fractal.x < 1.0) ca = fractal.x;\r\n  if(fractal.y < 1.0) cb = fractal.y;\r\n  float a2 = 0.0;\r\n  float b2 = 0.0;\r\n\r\n  float n = 0.0;\r\n  for (; n < maxN; n++){\r\n    a2 = a * a;\r\n    b2 = b * b;\r\n    \r\n    b = (a + a) * b + cb;\r\n    a = a2 - b2 + ca;\r\n    if(a2 + b2 > 4.0){\r\n      break;\r\n    }\r\n  }\r\n\r\n  float brightness;\r\n  if(n == maxN) {\r\n    brightness = -0.1;\r\n  }\r\n  else {\r\n    vec2 z = vec2(a,b);\r\n    float sl = n - log2(log2(dot(z,z)));\r\n\r\n    float al = 2.0 + 5.0 * cos(counter);\r\n    brightness = counter/10.0 * mix( n, sl, al );\r\n\r\n  } \r\n  vec3 col= vec3(0.0);\r\n  col += 0.5 + 0.6*cos( 2.7 + brightness + color);\r\n\r\n  gl_FragColor = vec4(col, 1.0);\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nexport const Container = styled.div`\r\n  z-index: 1;\r\n  width: 120px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledIconButton = styled(IconButton)`\r\n  box-shadow: ${(props) =>\r\n    props.enabled\r\n      ? \"inset -4px -4px 8px rgba(255, 255, 255, 0.6), inset 8px 8px 16px rgba(0, 0, 0, 0.2)\"\r\n      : \"-6px -6px 10px rgba(255, 255, 255, 0.3), 6px 6px 10px rgba(0, 0, 0, 0.3)\"};\r\n  color: black !important;\r\n  background-color: white !important;\r\n  margin: 5px 15px !important;\r\n`;\r\n","import React from \"react\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport { StyledIconButton } from \"../ButtonsStyle\";\r\n\r\nexport default function ShuffleButton({ onClick }) {\r\n  return (\r\n    <Tooltip title=\"Random fractal\">\r\n      <StyledIconButton onClick={onClick}>\r\n        <AutorenewIcon fontSize=\"large\" />\r\n      </StyledIconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\r\nimport { StyledIconButton } from \"../ButtonsStyle\";\r\n\r\nexport default function ColorButton({ onClick }) {\r\n  return (\r\n    <Tooltip title=\"Random colours\">\r\n      <StyledIconButton onClick={onClick}>\r\n        <ColorLensIcon fontSize=\"large\" />\r\n      </StyledIconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { Container } from \"./ButtonsStyle\";\r\nimport ShuffleButton from \"./ShuffleButton/ShuffleButton\";\r\nimport ColorButton from \"./ColorButton/ColorButton\";\r\n\r\nexport default function Buttons({ onRandomFractal, onRandomColor }) {\r\n  return (\r\n    <Container>\r\n      <ShuffleButton onClick={onRandomFractal} />\r\n      <ColorButton onClick={onRandomColor} />\r\n    </Container>\r\n  );\r\n}\r\n","import { forwardRef, useState } from \"react\";\r\nimport { Dialog, Zoom } from \"@material-ui/core\";\r\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\r\nimport MouseIcon from \"@material-ui/icons/Mouse\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 35px;\r\n  font-size: 1.2rem;\r\n  color: slategray;\r\n  font-weight: 700;\r\n`;\r\nconst Row = styled.div`\r\n  display: flex;\r\n  width: 290px;\r\n  margin: 20px 0px;\r\n`;\r\nconst IconContainer = styled.div`\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Zoom ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Info() {\r\n  const [open, setOpen] = useState(true);\r\n  const onClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Dialog\r\n      onClick={onClose}\r\n      onClose={onClose}\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n    >\r\n      <InfoContainer>\r\n        <Row>\r\n          <IconContainer>\r\n            <ZoomInIcon />\r\n          </IconContainer>\r\n          Scroll to zoom in/out\r\n        </Row>\r\n        <Row>\r\n          <IconContainer>\r\n            <MouseIcon />\r\n          </IconContainer>\r\n          Click and drag to explore\r\n        </Row>\r\n      </InfoContainer>\r\n    </Dialog>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { Canvas } from \"@react-three/fiber\";\nimport Main from \"./main/Main\";\nimport Buttons from \"./buttons/Buttons\";\nimport { useState } from \"react\";\nimport { Vector3 } from \"three\";\nimport Info from \"./Info/Info\";\n\nexport default function App() {\n  const [fractal, setFractal] = useState([2, 2]);\n  const [color, setColor] = useState([0.99, 0.05, 0.65]);\n\n  const onRandomFractal = () => {\n    const x = Math.random() * 2 - 1;\n    const y = Math.random() * 2 - 1;\n    setFractal([x, y]);\n  };\n  const onRandomColor = () => {\n    const r = Math.random();\n    const g = Math.random();\n    const b = Math.random();\n    const colorVec = new Vector3(r, g, b);\n    colorVec.setLength(1.2);\n    setColor(colorVec.toArray());\n  };\n\n  return (\n    <div className=\"container\">\n      <Info />\n      <Buttons\n        onRandomFractal={onRandomFractal}\n        onRandomColor={onRandomColor}\n      />\n      <Canvas\n        orthographic={true}\n        camera={{\n          position: [0, 0, 0],\n\n          near: 0,\n          far: 10,\n        }}\n      >\n        <Main fractal={fractal} color={color} />\n      </Canvas>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}